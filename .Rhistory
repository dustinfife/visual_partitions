model=Full,
added_term = ~Health) +
theme(legend.position="none") +
labs(x="Health", y = "CESD | BMI, A, D, S, I, and R", subtitle = "Marginal Effect of Health")
a2 = partial_residual_plot(CESD~Internet | Religion,
data=d,
model=Full,
added_term = ~Internet + Religion + Internet:Religion +
I(Internet^2) + I(Internet^2):Religion) +
theme(legend.position="none") +
labs(y = "CESD | BMI, A, D, S, and H", subtitle = "Marginal Effect of Internet/Religion")
a1 + a2 + patchwork::plot_layout(widths = c(1,2))
#vars_of_interest = c("Age", "BMI", "Smoking", "Drinking", "Health""Internet", ""
newtab = cbind(summary(Full)$coefficients[, 1:2], standardized.beta(Full)) %>%
data.frame %>%
mutate(Variable = names(standardized.beta(Full)),
Effect = names(standardized.beta(Full)),
Semip = c(NA, estimates(Full)$semi.p)) %>%
select(Variable, Effect, Estimate, Std..Error, V3, Semip) %>%
set_names(c("Variable(s)", "Effect", "Estimate", "SE", "Beta", "Semi-Partial"))
newtab$Effect[1:6] = ""
prep = round(newtab$`Semi-Partial`[6], digits=4)*100
newtab$`Semi-Partial` = round(newtab$`Semi-Partial`, digits=4)
newtab$`Semi-Partial`[7] = -1*diff(results$rsq)
newtab$`Semi-Partial`[c(1,8:11)] = ""
newtab$`Variable(s)`[7] = c("Internet/Religion")
newtab$`Variable(s)`[8:11] = ""
newtab$`Effect`[9] = "$\\text{Internet}^2$"
newtab$`Effect`[10] = "Internet $\\times$ Religion"
newtab$`Effect`[11] = "$\\text{Internet}^2 \\times$ Religion"
options(knitr.kable.NA = '')
papaja::apa_table(newtab,
caption = "ANOVA Summary Table/Effect Sizes for the Final Model.",
row.names=F,
escape = F,
digits=c(0,0,2,2,2,0),
align = c("l", "l", rep("c", times = ncol(newtab)-1)))
?apa_table
# combined_effects = data.frame(anova(Reduced, Full))
# semip = summary(Full)$r.squared - summary(Reduced)$r.squared
# a = with(combined_effects, c(Df[2], Sum.of.Sq[2], Sum.of.Sq[2]/Df[2], F[2], Pr..F.[2], semip))
# final_results[6,] = a
# row.names(final_results) = c(row.names(anova(Full))[1:5],"Internet/Religion")
# final_results = final_results %>%
#   mutate(semi.partial = round(semi.partial,digits=3),
#          p = scales::pvalue(p),
#          DF = round(DF),
#          SS = round(SS, 1),
#          MS = round(MS, 1),
#          F = round(F, 1))
devtools::install_github("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("tinytex")
rmarkdown::render()
rmarkdown::render("writing/visual_partitions.Rmd")
remotes::install_github("crsh/rmdfiltr")
Sys.getenv("RSTUDIO_PANDOC")
install.packages("knitr")
install.packages("knitr")
rmarkdown::render("writing/visual_partitions.Rmd")
x = seq(from=0, to= = .5)
x = seq(from=0, to= .5)
y = .01^x
plot(x,y)
x = seq(from=0, to= .5, length.out=30)
y = .01^x
plot(x,y)
a = .5
c = 0
x = seq(from=0, to= .5, length.out=30)
y = (1 - a(x))^(x*c)
y = (1 - a*(x))^(x*c)
plot(x,y)
a = .5
c = b
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
a = .5
c = 0
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
b = 0
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
plot(x,y)
a = .5
b = .5
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
plot(x,y)
a = 0
b = 5
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
plot(x,y)
a = 0
b = 1
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b
plot(x,y)
a = 0
b = 1
c = 1
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b + ifelse(x<0.05,1,0)*c
plot(x,y)
b = 0
c = 1
x = seq(from=0, to= .5, length.out=30)
y = a*(1-x) + (.01^x)*b + ifelse(x<0.05,1,0)*c
plot(x,y)
a = 0
b = 0
c = 1
p = seq(from=0, to= .5, length.out=30)
y = a*(1-p) + (.01^p)*b + ifelse(p<0.05,1,0)*c
plot(x,y)
d = read.csv("data/health_depression.csv")
d = d %>% dplyr::select(Age, BMI, Smoking, Drinking, Religion, CESD, IATTotalscores, HPLPTotalscores) %>%
set_names("Age", "BMI", "Smoking", "Drinking", "Religion", "CESD", "Internet", "Health")
# zero-order analysis
flexplot(Internet~CESD, data=d, method="quadratic")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, note=FALSE, cache=TRUE)
options(tinytex.verbose = TRUE)
options(knitr.kable.NA = '')
require(tidyverse)
require(flexplot)
require(flexplot)
require(tidyverse)
require(patchwork)
mod = lm(ideation~stress + I(stress^2) + health + friend_ideation * depression, data=ideation)
aovtab = data.frame(anova(mod))
aovtab$F.value = round(aovtab$F.value, digits=2)
row.names(aovtab) = gsub("friend_ideation", "friend ideation", row.names(aovtab))
row.names(aovtab)[6] = "friend ideation $ \\times $ depression"
row.names(aovtab)[2] = "$\\text{stress}^2$"
aovtab$Pr..F. = scales::pvalue(aovtab$Pr..F.)
aovtab$F.value[7] = ""
aovtab$Pr..F.[7] = ""
papaja::apa_table(aovtab,
caption = "ANOVA Summary Table of the Suicide Ideation Analysis",
digits=2, row.names=T,
escape=FALSE,
align = c("l", rep("c", times=ncol(aovtab))),
col.names = c("", "DF", "SS", "MS", "F", "p"))
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
a
b
a+b + plot_layout(nrow=2)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, note=FALSE, cache=TRUE)
options(tinytex.verbose = TRUE)
options(knitr.kable.NA = '')
require(tidyverse)
require(flexplot)
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, note=FALSE, cache=TRUE)
options(tinytex.verbose = TRUE)
options(knitr.kable.NA = '')
require(tidyverse)
require(flexplot)
require(flexplot)
require(tidyverse)
require(patchwork)
mod = lm(ideation~stress + I(stress^2) + health + friend_ideation * depression, data=ideation)
aovtab = data.frame(anova(mod))
aovtab$F.value = round(aovtab$F.value, digits=2)
row.names(aovtab) = gsub("friend_ideation", "friend ideation", row.names(aovtab))
row.names(aovtab)[6] = "friend ideation $ \\times $ depression"
row.names(aovtab)[2] = "$\\text{stress}^2$"
aovtab$Pr..F. = scales::pvalue(aovtab$Pr..F.)
aovtab$F.value[7] = ""
aovtab$Pr..F.[7] = ""
papaja::apa_table(aovtab,
caption = "ANOVA Summary Table of the Suicide Ideation Analysis",
digits=2, row.names=T,
escape=FALSE,
align = c("l", rep("c", times=ncol(aovtab))),
col.names = c("", "DF", "SS", "MS", "F", "p"))
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
install.packages("patchwork")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, note=FALSE, cache=TRUE)
options(tinytex.verbose = TRUE)
options(knitr.kable.NA = '')
require(tidyverse)
require(flexplot)
require(flexplot)
require(tidyverse)
require(patchwork)
mod = lm(ideation~stress + I(stress^2) + health + friend_ideation * depression, data=ideation)
aovtab = data.frame(anova(mod))
aovtab$F.value = round(aovtab$F.value, digits=2)
row.names(aovtab) = gsub("friend_ideation", "friend ideation", row.names(aovtab))
row.names(aovtab)[6] = "friend ideation $ \\times $ depression"
row.names(aovtab)[2] = "$\\text{stress}^2$"
aovtab$Pr..F. = scales::pvalue(aovtab$Pr..F.)
aovtab$F.value[7] = ""
aovtab$Pr..F.[7] = ""
papaja::apa_table(aovtab,
caption = "ANOVA Summary Table of the Suicide Ideation Analysis",
digits=2, row.names=T,
escape=FALSE,
align = c("l", rep("c", times=ncol(aovtab))),
col.names = c("", "DF", "SS", "MS", "F", "p"))
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, note=FALSE, cache=TRUE)
options(tinytex.verbose = TRUE)
options(knitr.kable.NA = '')
require(tidyverse)
require(flexplot)
require(flexplot)
require(tidyverse)
require(patchwork)
mod = lm(ideation~stress + I(stress^2) + health + friend_ideation * depression, data=ideation)
aovtab = data.frame(anova(mod))
aovtab$F.value = round(aovtab$F.value, digits=2)
row.names(aovtab) = gsub("friend_ideation", "friend ideation", row.names(aovtab))
row.names(aovtab)[6] = "friend ideation $ \\times $ depression"
row.names(aovtab)[2] = "$\\text{stress}^2$"
aovtab$Pr..F. = scales::pvalue(aovtab$Pr..F.)
aovtab$F.value[7] = ""
aovtab$Pr..F.[7] = ""
papaja::apa_table(aovtab,
caption = "ANOVA Summary Table of the Suicide Ideation Analysis",
digits=2, row.names=T,
escape=FALSE,
align = c("l", rep("c", times=ncol(aovtab))),
col.names = c("", "DF", "SS", "MS", "F", "p"))
a = flexplot(ideation~friend_ideation | depression, data=ideation, method="lm") + labs(x="Friend's Suicide Ideation", y="Self Suicide Ideation")
b = flexplot(ideation~depression + friend_ideation, data=ideation, method="lm") + labs(x="Depression", y="Self Suicide Ideation")
require(patchwork)
a+b + plot_layout(nrow=2)
flexplot(ideation~stress + health | friend_ideation + depression, data=ideation,
labels=list("friend_ideation" = c("low", "medium", "high"),
"health_binned" = c("low", "medium", "high"),
"depression" = c("low", "medium", "high"))) +
labs(y="Suicide Ideation", x="Stress", color="Health", linetype="Health", shape="Health") + theme_bw()
n = 1200
x = rnorm(n)
z = rnorm(n)
w = rnorm(n)
y1 = .3*x + .3*z + .3*w + .5*x*z + rnorm(n, 0, .5)
y2 = .3*x + .3*z + .3*w + .5*x*w + rnorm(n, 0, .5)
y3 = .3*x + .3*z + .3*w + .7*x*z*w + rnorm(n, 0, .5)#+ .5*x*z + .5*x*w + .5*w*z + rnorm(n, 0, .5)
y4 = .3*x + .3*z + .3*w + .7*x*z*w + .5*x*z + .5*x*w + .5*w*z + rnorm(n, 0, .5)
d = data.frame(x, w, z, y1, y2, y3, y4)
a = marginal_plot(
flexplot(y1~x | z + w, data=d, method="lm",
labels=list("x" = c("low", "medium", "high"),
"z" = c("low", "medium", "high")
)) +
labs(x="x", y="y", title="Interaction Between X and Z") )
a
marginal_plot(
flexplot(y2~x | z + w, data=d, method="lm",
labels = list("x" = c("low", "medium", "high"),
"z" = c("low", "medium", "high")))
+ theme_bw() + labs(x="x", y="y", title="Interaction Between X and W"))
a = marginal_plot(flexplot(y3~x | z + w, data=d, method="lm",
labels=list("x" = c("low", "medium", "high"),
"z" = c("low", "medium", "high")))+
labs(x="x", y="y"))
a
model = lm(ideation~stress +
I(stress^2)+
depression * friend_ideation +
health,
data=ideation)
partial_residual_plot(ideation~friend_ideation | depression,
model=model,
added_term = ~depression*friend_ideation,
data=ideation,
labels=list("depression" = c("low", "medium", "high"))) +
# modify the labels
ylab(expression(I==S~+~S^{2}~+~H)) +
xlab("Friend Ideation") +
theme_bw()
# plot stress on the x-axis, and remove it's linear and nonlinear components
partial_residual_plot(ideation~stress,
model=model,
added_term = ~stress + I(stress^2),
data=ideation) +
# modify the labels
ylab(expression(I==H~+~D~+~FI~+~{D}%*%{FI})) +
xlab("Stress") +
theme_bw()
model = lm(ideation~stress +
depression * friend_ideation +
health,
data=ideation)
partial_residual_plot(ideation~stress,
model=model,
data=ideation) +
ylab(expression(I==H~+~D~+~FI~+~{D}%*%{FI})) +
xlab("Friend Ideation") +
theme_bw()
set.seed(1212)
# mood, emotion, performance
mat = matrix(c(
1, .4, .1,
.4, 1, .6,
.1,.6,  1),
nrow=3
)
d = MASS::mvrnorm(904, mu = c(0,0,0), Sigma = mat) %>%
data.frame() %>%
set_names(c("mood", "emotion", "performance"))
a = flexplot(performance~mood, data=d, method="lm") +
labs(x="Mood", y="Decision-Making")
b = partial_residual_plot(performance~mood,
lm_formula = performance~mood+emotion,
data=d,
added_term = ~mood) +
labs(x="Mood", y="Decision-Making | Emotional Intelligence")
a+b
mod = lm(ideation~stress + health, data=ideation)
a = partial_residual_plot(ideation~stress,
data=ideation,
added_term = ~stress,
model = mod) +
labs(y="Suicide Ideation | Health", x= "Stress (Linear Only)")
mod = lm(ideation~stress + health + I(stress^2), data=ideation)
b = partial_residual_plot(ideation~stress,
data=ideation,
added_term = ~stress + I(stress^2),
model = mod) +
labs(y="Suicide Ideation | Health", x= "Stress (Linear/Nonlinear)")
a+b
require(flexifiers)
mod = lm(ideation~depression+friend_ideation, data=ideation)
a = partial_residual_plot(ideation~depression,
data=ideation,
added_term = ~depression,
model = mod) +
labs(y="Suicide Ideation | Friend Ideation", x= "Depression")
mod = lm(ideation~depression*friend_ideation, data=ideation)
b = partial_residual_plot(ideation~depression|friend_ideation,
data=ideation,
added_term = ~depression*friend_ideation,
model = mod) +
labs(y="Suicide Ideation", x= "Depression") +
theme(strip.text.x = element_text(size = 10))
b = b %>% flexifiers::modify_labels(col_panels="Friend Ideation")
a+b + plot_layout(widths=c(1,2))
cormat = matrix(.3, nrow=4, ncol=4)
diag(cormat) = 1
require(tidyverse)
d = MASS::mvrnorm(1000, c(0,0,0,0), cormat) %>% data.frame %>% set_names(c("y", "a", "b", "c"))
d$y = with(d, .2*a*b + .5*a*b*c + y)
mod = lm(y~a + b + c + a:b, data=d)
p = partial_residual_plot(y~c | b + a,
data=d, model=mod,
method="lm", suppress_model = F,
labels = list("b" = c("low", "mid", "high"),
"a" = c("low", "mid", "high")))
p
model = lm(ideation~stress +
I(stress^2)+
depression * friend_ideation +
health,
data=ideation)
a = partial_residual_plot(ideation~health,
model=model,
added_term = ~health,
data=ideation) +
ylab(expression(I==S~+~S^{2}~+~D~+~FI~+~{D}%*%{FI})) +
xlab("Health") +
theme_bw()
b = partial_residual_plot(ideation~stress,
model=model,
added_term = ~stress + I(stress^2),
data=ideation) +
ylab(expression(I==S~+~S^{2}~+~H)) +
xlab("Stress") +
theme_bw()
c = partial_residual_plot(ideation~friend_ideation | depression,
model=model,
added_term = ~depression*friend_ideation,
data=ideation, labels=list("depression" = c("low", "mid", "high"))) +
ylab(expression(I==S~+~S^{2}~+~H)) +
xlab("Friend Ideation") +
theme_bw()
(a + b) / c
require(flexplot)
require(tidyverse)
require(patchwork)
d = read.csv("../data/health_depression.csv")
d = d %>% dplyr::select(Age, BMI, Smoking, Drinking, Religion, CESD, IATTotalscores, HPLPTotalscores) %>%
set_names("Age", "BMI", "Smoking", "Drinking", "Religion", "CESD", "Internet", "Health")
mod = lm(CESD~Health + Internet + Age + BMI + Drinking + Smoking + Religion, data=d)
aovtab = data.frame(anova(mod))
aovtab$F.value = round(aovtab$F.value, digits=2)
aovtab$F.value[8] = ""
aovtab$Pr..F. = scales::pvalue(aovtab$Pr..F.)
aovtab$Pr..F.[8]= ""
papaja::apa_table(aovtab,
caption = "Naive Analysis of the Relationship Between Health/Internet and CESD, After Controlling for Age, BMI, Drinking, Smoking, and Religion",
digits=2, row.names=T,
align = c("l", rep("c", times=ncol(aovtab))),
col.names = c("", "DF", "SS", "MS", "F", "p"))
d2 = d %>%
mutate(CESD = sqrt(CESD), Health = sqrt(Health))
a = flexplot(CESD~Internet|Religion + Health, data=d2, method="quadratic")
a
marginal_plot(a)
Full = lm(CESD~Age + BMI + Smoking + Drinking + Health +
Internet + Religion + Internet:Religion +
I(Internet^2) + I(Internet^2):Religion, data=d)
Reduced = update(Full, .~.-(Internet:Religion + I(Internet^2) + I(Internet^2):Religion))
results = model.comparison(Full, Reduced)$statistics
papaja::apa_table(results,
caption = "Model Comparison of the Full and Reduced Model for the Depression, Internet Addiction, and Health Dataset.",
digits=2, row.names=T,
align = c("l", rep("c", times = ncol(results))),
col.names = c("", "AIC", "BIC", "BF", "p", "$R^2$"))
results
Full = lm(CESD~Age + BMI + Smoking + Drinking + Health +
Internet + Religion + Internet:Religion +
I(Internet^2) + I(Internet^2):Religion, data=d)
Reduced = update(Full, .~.-(Internet:Religion + I(Internet^2) + I(Internet^2):Religion))
results = model.comparison(Full, Reduced)$statistics %>%
select(-adj.rsq)
papaja::apa_table(results,
caption = "Model Comparison of the Full and Reduced Model for the Depression, Internet Addiction, and Health Dataset.",
digits=2, row.names=T,
align = c("l", rep("c", times = ncol(results))),
col.names = c("", "AIC", "BIC", "BF", "p", "$R^2$"))
# Load the file and store in a data frame
df <- read_csv("~/Downloads/percentage_reduction_raw_Exp_DT_012_DT_013_DT_014_DT_015.csv")
# Load the file and store in a data frame
d <- read_csv("~/Downloads/percentage_reduction_raw_Exp_DT_012_DT_013_DT_014_DT_015.csv")
head(d)
View(d)
# Load the file and store in a data frame
d <- read_csv("~/Downloads/percentage_reduction_raw_Exp_DT_012_DT_013_DT_014_DT_015.csv")
#remove the calculations for all values of time points 22 and bigger
df<-df[!(df$Discrete_Time=="Time_22" | df$Discrete_Time=="Time_24" | df$Discrete_Time=="Time_26"),]
# remove all columns not required for the analysis
df_subset <- subset(df[,c("Treatment", "sample", "interval", "Reduction_standard")])
#separate cells from number of initial culture concentration and eliminate unnecessary column
df_subset <- df_subset %>% extract(col= sample,
into= c("cell_type","cell", "concentration"),
"([BC])_(cell)_(\\d+)") %>% select(-cell)
# change terminology of "B" and "C" cell to corresponding strain name
df_subset$cell_type<-replace(df_subset$cell_type,df_subset$cell_type=="B","B2086.1")
df_subset$cell_type<-replace(df_subset$cell_type,df_subset$cell_type=="C","CU428.2")
#lm(Reduction_standard ~ interval + cell_type + concentration, data = df_subset)
require(lme4)
# Load the file and store in a data frame
df <- read_csv("~/Downloads/percentage_reduction_raw_Exp_DT_012_DT_013_DT_014_DT_015.csv")
#remove the calculations for all values of time points 22 and bigger
df<-df[!(df$Discrete_Time=="Time_22" | df$Discrete_Time=="Time_24" | df$Discrete_Time=="Time_26"),]
# remove all columns not required for the analysis
df_subset <- subset(df[,c("Treatment", "sample", "interval", "Reduction_standard")])
#separate cells from number of initial culture concentration and eliminate unnecessary column
df_subset <- df_subset %>% extract(col= sample,
into= c("cell_type","cell", "concentration"),
"([BC])_(cell)_(\\d+)") %>% select(-cell)
# change terminology of "B" and "C" cell to corresponding strain name
df_subset$cell_type<-replace(df_subset$cell_type,df_subset$cell_type=="B","B2086.1")
df_subset$cell_type<-replace(df_subset$cell_type,df_subset$cell_type=="C","CU428.2")
#lm(Reduction_standard ~ interval + cell_type + concentration, data = df_subset)
require(lme4)
mod = lmer(Reduction_stardard~1 + (1 | cell_type), data=df)
mod = lmer(Reduction_standard~1 + (1 | cell_type), data=df)
mod = lmer(Reduction_standard~1 + (1 | cell_type), data=df_subset)
estimates(mod)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration)
View(d)
d = df_subset %>%
select(Reduction_standard, cell_type, time, interval, concentration)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration)
View(d)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration) %>%
arrange(cell_type)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration) %>%
arrange(cell_type, interval)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration) %>%
arrange(cell_type, interval, concentration)
d = df_subset %>%
select(Reduction_standard, cell_type, interval, concentration, experiment) %>%
arrange(cell_type, interval, concentration)
View(d)
mod = lmer(Reduction_standard~1 + (1 | cell_type), data=df_subset)
estimates(mod)
nrow(d)
mod = lmer(Reduction_standard~interval + cell_type + concentration +
(concentration + interval | cell_type), data=df_subset)
visualize(mod, plot="model", formula = Reduction_standard~interval | cell_type)
visualize(mod, plot="model", formula = Reduction_standard~interval + concentration | cell_type)
